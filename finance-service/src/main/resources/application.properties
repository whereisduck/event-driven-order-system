eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=finance-service
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
server.port=8084
app.catalogue-service.products-uri=${http://catalogue-service/api/catalog}

#mongo db
#spring.data.mongodb.uri=mongodb://${MONGO_USER:dbuser}:${MONGO_PASSWORD:dbpassword}@${MONGO_HOST:localhost}:${MONGO_PORT:27017}/

#spring.data.mongodb.uri="mongodb://localhost:27017/customerservice"
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=financeservice
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=password

spring.kafka.bootstrap-servers=localhost:9092
spring.json.type.mapping=paymentreject:com.duck.ordersystem.financeservice.client.event.PaymentRejectEvent,\
   paymentsuccess:com.duck.ordersystem.financeservice.client.event.PaymentSuccessEvent,\
   ordercancellation:com.duck.ordersystem.financeservice.client.event.OrderCancellationEvent,\
   orderpayment:com.duck.ordersystem.financeservice.model.Order

#spring.kafka.producer.properties[spring.json.add.type.headers]=false
#spring.kafka.consumer.JsonDeserializer.USE_TYPE_INFO_HEADERS=false
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer